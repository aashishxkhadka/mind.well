{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/aashishkhadka/Documents/Mindwell/src/app/%28user%29/%28auth%29/register/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { useForm } from \"react-hook-form\"\nimport { z } from \"zod\"\nimport axios from \"axios\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { useMutation } from \"@tanstack/react-query\"\nimport { toast } from \"sonner\"\n\nconst formSchema = z.object({\n  name: z.string().min(2, { message: \"Name must be at least 2 characters\" }),\n  email: z.string().email({ message: \"Please enter a valid email address\" }),\n  password: z.string().min(6, { message: \"Password must be at least 6 characters\" }),\n})\n\ntype FormValues = z.infer<typeof formSchema>\n\nexport default function SignupPage() {\n  const [isLoading, setIsLoading] = useState(false)\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n    },\n  })\n\n  const signup = useMutation({\n    mutationFn: async (data: FormValues) => await axios.post(\"/api/signup\", {\n      ...data,\n    }),\n    mutationKey: [\"signup\"],\n    onSuccess: () => {\n      setIsLoading(false)\n      toast.success(\"singup success\")\n      window.location.href = \"/login\"\n    },\n    onError: () => {\n      setIsLoading(false)\n      toast.error(\"singup failed\")\n    }\n  })\n\n  const onSubmit = (data: FormValues) => {\n    setIsLoading(true)\n    signup.mutate(data)\n    // Simulate API call\n    console.log(data)\n    setTimeout(() => {\n      setIsLoading(false)\n      // Here you would typically redirect the user or show a success message\n    }, 1000)\n  }\n\n  return (\n    <div className=\"container mx-auto flex py-16 items-center justify-center\">\n      <Card className=\"w-full min-w-md\">\n        <CardHeader className=\"space-y-1\">\n          <CardTitle className=\"text-2xl font-bold\">Create an account</CardTitle>\n          <CardDescription>Enter your information to create an account</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <label\n                htmlFor=\"name\"\n                className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n              >\n                Full Name\n              </label>\n              <Input\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"John Doe\"\n                {...register(\"name\")}\n                aria-invalid={errors.name ? \"true\" : \"false\"}\n              />\n              {errors.name && <p className=\"text-sm font-medium text-destructive\">{errors.name.message}</p>}\n            </div>\n\n            <div className=\"space-y-2\">\n              <label\n                htmlFor=\"email\"\n                className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n              >\n                Email\n              </label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"name@example.com\"\n                {...register(\"email\")}\n                aria-invalid={errors.email ? \"true\" : \"false\"}\n              />\n              {errors.email && <p className=\"text-sm font-medium text-destructive\">{errors.email.message}</p>}\n            </div>\n\n            <div className=\"space-y-2\">\n              <label\n                htmlFor=\"password\"\n                className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n              >\n                Password\n              </label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"••••••••\"\n                {...register(\"password\")}\n                aria-invalid={errors.password ? \"true\" : \"false\"}\n              />\n              {errors.password && <p className=\"text-sm font-medium text-destructive\">{errors.password.message}</p>}\n            </div>\n\n            <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n              {isLoading ? \"Creating account...\" : \"Sign up\"}\n            </Button>\n          </form>\n        </CardContent>\n        <CardFooter className=\"flex flex-col justify-center\">\n          <p className=\"text-sm text-muted-foreground\">\n            Already have an account?{\" \"}\n            <Link href=\"/login\" className=\"text-primary hover:underline\">\n              Login\n            </Link>\n          </p>\n          <p className=\"text-sm\">or</p>\n          <Link href=\"/register/doctor\" className=\"text-sm text-primary hover:underline\">\n            Signup as a doctor\n          </Link>\n        </CardFooter>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}