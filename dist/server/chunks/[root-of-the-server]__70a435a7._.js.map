{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/aashishkhadka/Documents/Mindwell/src/lib/prisma.ts"],"sourcesContent":["import {PrismaClient} from '@prisma/client';\n\nlet prisma: PrismaClient;\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient();\n} else {\n  if (!(global as any).prisma) {\n    (global as any).prisma = new PrismaClient();\n  }\n  prisma = (global as any).prisma;\n}\n\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI;AAEJ,uCAA2C;;AAE3C,OAAO;IACL,IAAI,CAAC,AAAC,OAAe,MAAM,EAAE;QAC1B,OAAe,MAAM,GAAG,IAAI,6HAAA,CAAA,eAAY;IAC3C;IACA,SAAS,AAAC,OAAe,MAAM;AACjC;uCAEe","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///Users/aashishkhadka/Documents/Mindwell/src/app/api/doctors/route.ts"],"sourcesContent":["import prisma from \"@/lib/prisma\"\n\nimport { NextResponse } from \"next/server\"\n\nexport async function GET() {\n  const doctors = await prisma.user.findMany({\n    where: {\n      isDoctor: true,\n    },\n  })\n  return NextResponse.json(doctors)\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEO,eAAe;IACpB,MAAM,UAAU,MAAM,sHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACzC,OAAO;YACL,UAAU;QACZ;IACF;IACA,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B","debugId":null}}]
}