{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/aashishkhadka/Documents/Mindwell/src/lib/prisma.ts"],"sourcesContent":["import {PrismaClient} from '@prisma/client';\n\nlet prisma: PrismaClient;\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient();\n} else {\n  if (!(global as any).prisma) {\n    (global as any).prisma = new PrismaClient();\n  }\n  prisma = (global as any).prisma;\n}\n\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI;AAEJ,uCAA2C;;AAE3C,OAAO;IACL,IAAI,CAAC,AAAC,OAAe,MAAM,EAAE;QAC1B,OAAe,MAAM,GAAG,IAAI,6HAAA,CAAA,eAAY;IAC3C;IACA,SAAS,AAAC,OAAe,MAAM;AACjC;uCAEe","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///Users/aashishkhadka/Documents/Mindwell/src/app/api/%28auth%29/login/route.ts"],"sourcesContent":["import prisma from \"@/lib/prisma\";\nimport bcrypt from \"bcryptjs\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport jwt from \"jsonwebtoken\"\n\nexport async function POST(req: NextRequest) {\n  const { email, password } = await req.json();\n\n  const user = await prisma.user.findUnique({ where: { email } });\n  if (!user) return NextResponse.json({ message: \"User not found\" });\n\n  const isPasswordValid = bcrypt.compare(password, user.password);\n  if (!isPasswordValid) return NextResponse.json({ message: \"Invalid password\" });\n\n  const token = jwt.sign({ id: user.id, email: user.email, name: user.name }, process.env.JWT_SECRET as jwt.Secret);\n  return NextResponse.json({ message: \"Login Successful\", token: token });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,GAAgB;IACzC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;IAE1C,MAAM,OAAO,MAAM,sHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QAAE,OAAO;YAAE;QAAM;IAAE;IAC7D,IAAI,CAAC,MAAM,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAAiB;IAEhE,MAAM,kBAAkB,wLAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;IAC9D,IAAI,CAAC,iBAAiB,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAAmB;IAE7E,MAAM,QAAQ,gMAAA,CAAA,UAAG,CAAC,IAAI,CAAC;QAAE,IAAI,KAAK,EAAE;QAAE,OAAO,KAAK,KAAK;QAAE,MAAM,KAAK,IAAI;IAAC,GAAG,QAAQ,GAAG,CAAC,UAAU;IAClG,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;QAAoB,OAAO;IAAM;AACvE","debugId":null}}]
}