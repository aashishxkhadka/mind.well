{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/aashishkhadka/Documents/Mindwell/src/lib/prisma.ts"],"sourcesContent":["import {PrismaClient} from '@prisma/client';\n\nlet prisma: PrismaClient;\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient();\n} else {\n  if (!(global as any).prisma) {\n    (global as any).prisma = new PrismaClient();\n  }\n  prisma = (global as any).prisma;\n}\n\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI;AAEJ,uCAA2C;;AAE3C,OAAO;IACL,IAAI,CAAC,AAAC,OAAe,MAAM,EAAE;QAC1B,OAAe,MAAM,GAAG,IAAI,6HAAA,CAAA,eAAY;IAC3C;IACA,SAAS,AAAC,OAAe,MAAM;AACjC;uCAEe","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///Users/aashishkhadka/Documents/Mindwell/src/app/api/post/route.ts"],"sourcesContent":["import prisma from \"@/lib/prisma\"\nimport { NextRequest, NextResponse } from \"next/server\"\n\nexport async function POST(request: NextRequest) {\n  const body = await request.json()\n  const { title, content, authorId } = body\n\n  const post = await prisma.post.create({\n    data: {\n      title,\n      content,\n      authorId,\n    },\n  })\n\n  return NextResponse.json(post)\n}\n\nexport async function GET(request: NextRequest) {\n  const posts = await prisma.post.findMany({\n    include: {\n      author: true,\n      comments: true,\n    },\n    orderBy: {\n      createdAt: \"desc\",\n    },\n  })\n  return NextResponse.json(posts)\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAoB;IAC7C,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG;IAErC,MAAM,OAAO,MAAM,sHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACpC,MAAM;YACJ;YACA;YACA;QACF;IACF;IAEA,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B;AAEO,eAAe,IAAI,OAAoB;IAC5C,MAAM,QAAQ,MAAM,sHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvC,SAAS;YACP,QAAQ;YACR,UAAU;QACZ;QACA,SAAS;YACP,WAAW;QACb;IACF;IACA,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B","debugId":null}}]
}